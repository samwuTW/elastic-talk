# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.8

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/development.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install pip-tools
            pip-sync requirements/base.txt requirements/development.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/development.txt" }}

      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python3 -m unittest discover -v 2 -s .

  deploy:
    docker:
      - image: circleci/python:3.8

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-deploy-{{ checksum "requirements/deploy.txt" }}
            - v1-dependencies-deploy-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install pip-tools
            pip-sync requirements/deploy.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-deploy-{{ checksum "requirements/deploy.txt" }}

      - run:
          name: run build wheel & delopy
          command: |
            . venv/bin/activate
            make -C src deploy

      - store_artifacts:
          path: test-reports
          destination: test-reports
workflows:
  version: 2
  test:
    jobs:
      - build

  test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/

      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
